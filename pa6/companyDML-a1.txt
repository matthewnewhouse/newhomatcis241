SQL> -- ---------------------------------------------------------------
SQL> --
SQL> -- Name: Matthew Newhouse
SQL> --
SQL> -- ------------------------------------------------------------
SQL> -- NULL AND SUBSTRINGS -------------------------------
SQL> --
SQL> /*(10A)
SQL> Find the ssn and last name of every employee who doesn't have a  supervisor, or their last name contains at least two occurences of the letter 'a'. Sort the results by ssn.
SQL> */
SQL> SELECT ssn, lname, super_ssn
  2  FROM EMPLOYEE
  3  WHERE super_ssn IS NULL or lname like '%a%a%'
  4  ORDER BY SSN;

SSN       LNAME           SUPER_SSN                                             
--------- --------------- ---------                                             
666884444 Narayan         333445555                                             
888665555 Borg                                                                  
987654321 Wallace         888665555                                             
987987987 Jabbar          987654321                                             
999887777 Zelaya          987654321                                             

SQL> 
SQL> --
SQL> -- JOINING 3 TABLES ------------------------------
SQL> --
SQL> /*(11A)
SQL> For every employee who works more than 30 hours on any project: Find the ssn, lname, project number, project name, and number of hours. Sort the results by ssn.
SQL> */
SQL> SELECT E.ssn, E.lname, P.pnumber, P.pname, W.hours
  2  FROM EMPLOYEE E, WORKS_ON W, PROJECT P
  3  WHERE E.ssn = W.essn and W.pno = P.pnumber and W.hours>30
  4  ORDER BY SSN;

SSN       LNAME              PNUMBER PNAME                HOURS                 
--------- --------------- ---------- --------------- ----------                 
123456789 Smith                    1 ProductX              32.5                 
666884444 Narayan                  3 ProductZ                40                 
987987987 Jabbar                  10 Computerization         35                 

SQL> --
SQL> -- JOINING 3 TABLES ---------------------------
SQL> --
SQL> /*(12A)
SQL> Write a query that consists of one block only.
SQL> For every employee who works on a project that is not controlled by the department they work for: Find the employee's lname, the department they works for, the project number that they work on, and the number of the department that controls that project. Sort the results by lname.
SQL> */
SQL> -- <<< Your SQL code replaces this whole line>>>
SQL> --
SQL> -- JOINING 4 TABLES -------------------------
SQL> --
SQL> /*(13A)
SQL> For every employee who works for more than 20 hours on any project that is located in the same location as their department: Find the ssn, lname, project number, project location, department number, and department location. Sort the results by lname
SQL> */
SQL> -- <<< Your SQL code replaces this whole line>>>
SQL> --
SQL> -- SELF JOIN -------------------------------------------
SQL> --
SQL> /*(14A)
SQL> Write a query that consists of one block only.
SQL> For every employee whose salary is less than 70% of his/her immediate supervisor's salary: Find that employee's ssn, lname, salary; and their supervisor's ssn, lname, and salary. Sort the results by ssn.
SQL> */
SQL> -- <<< Your SQL code replaces this whole line>>>
SQL> --
SQL> -- USING MORE THAN ONE RANGE VARIABLE ON ONE TABLE -------------------
SQL> --
SQL> /*(15A)
SQL> For projects located in Houston: Find pairs of last names such that the two employees in the pair work on the same project. Remove duplicates. Sort the result by the lname in the left column in the result.
SQL> */
SQL> -- <<< Your SQL code replaces this whole line>>>
SQL> --
SQL> ------------------------------------
SQL> --
SQL> SET ECHO OFF
